<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tensorflow on excelkks</title>
    <link>/tags/tensorflow/</link>
    <description>Recent content in tensorflow on excelkks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Dec 2020 09:58:47 +0800</lastBuildDate><atom:link href="/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tensorflow</title>
      <link>/post/2020/12/09/tensorflow/</link>
      <pubDate>Wed, 09 Dec 2020 09:58:47 +0800</pubDate>
      
      <guid>/post/2020/12/09/tensorflow/</guid>
      <description>使用GPU 为了避免占用全部GPU，需要加上
import os os.environ[&amp;#39;CUDA_DEVICES_ORDER&amp;#39;] = &amp;#39;PCI_BUS_ID&amp;#39; os.environ[&amp;#39;CUDA_VISIBLE_DEVICES&amp;#39;] = &amp;#39;0&amp;#39; config = tf.ConfigProto() #config.gpu_options.per_process_gpu_memory_fraction = 0.9 config.gpu_options.allow_growth = True tf.truncated_normal_initializer
生成截断正态分布的初始化器类
参数 mean: 分布的均值 stddev: standard deviation，标准差 seed: 随机种子 dtype: 数据类型，只能是float的类型，可选位数 tf.get_variable()
获取一个变量或者创建一个新的变量
重要参数 shape: list类型，是指变量的shape Initializer: 用于生成变量的初始化器 tf.nn.conv2d()
2维卷积函数，列举主要参数tf.nn.conv2d(input, filter=None, strides=None, paddig=None, data_format=&amp;lsquo;NHWC&amp;rsquo;)。
重要参数 input: 输入4-D的Tensor，数据格式只能是half,bfloat16,float32,float64 filter: 卷积核，也是一个4-D tensor，数据格式必须与input一样 strides: 移动步长，可以是长度为1,2,4的list，长度为1时，表示宽高方向的移动步长，并且一致。长度为2时，分别指定宽高方向的移动步长。长度为4时，设定根据data_format指定的位置对应方向移动步长。 padding: &amp;lsquo;VALID&amp;rsquo;表示不填充， SAME&amp;rsquo;表示填充。填充方式根据filter而定，如果filter的一个维度上的长度为奇数，则在该维度起始处和结束处填充0，如果为偶数则在结束处填充0。 一般来说，input的各个维度为[batch, in_height, in_width, in_channels]，filter的各个维度为 [filter_height, filter_width, in_channels, out_channels]
初始化变量 变量需要初始化，初始化方法有单独初始化和全局初始化。
单独初始化 v1 = tf.Variable(tf.random_normal([2, 3], stddev=2)) v2 = tf.</description>
    </item>
    
  </channel>
</rss>
