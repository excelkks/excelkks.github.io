<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on excelkks</title>
    <link>/tags/python/</link>
    <description>Recent content in python on excelkks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Dec 2020 10:49:06 +0800</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>os模块</title>
      <link>/post/2020/12/11/os%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Fri, 11 Dec 2020 10:49:06 +0800</pubDate>
      
      <guid>/post/2020/12/11/os%E6%A8%A1%E5%9D%97/</guid>
      <description>os.walk os.walk(path)用于遍历目录。返回值是一个遍历器，需要用for循环不断遍历，每次遍历得到长度为3的tuple，分别为(目录, [目录下的子目录], [目录下的文件])。 使用方法示例:
for root, dirs, files in os.walk(&amp;#39;.&amp;#39;): for file in files: print(os.path.join(root, file)) for dir in dirs: print(os.path.join(root, dir)) ./directory_2 ./directory_1 ./directory_2/file_2_1 ./directory_2/directory_2_1 ./directory_2/directory_2_1/file_2_1_1 ./directory_1/directory_1_1 ./directory_1/directory_1_2 ./directory_1/directory_1_1/file_1_1_2 ./directory_1/directory_1_1/file_1_1_1 ./directory_1/directory_1_2/file_1_2_1 glob模块 glob.glob glob.glob用于以shell-style的方式匹配目录下的文件, 例如shell匹配所有jpg图片
*.jpg 在python中用glob.glob的方式为
files = glob.glob(&amp;#39;*.py&amp;#39;) numpy模块 random.get_state numpy.random.get_state()一般与numpy.random.set_state()和numpy.random.shuffle()一起使用，用于打乱numpy数组的顺序。例如打乱数据集
state = np.random.get_state() np.random.shuffle(dataset_images) # 保证打乱的顺序与之前一致 np.random.set_state(state) np.random.shuffle(dataset_labels) </description>
    </item>
    
    <item>
      <title>Jupyter Notebook</title>
      <link>/post/2020/12/09/jupyter-notebook/</link>
      <pubDate>Wed, 09 Dec 2020 10:00:18 +0800</pubDate>
      
      <guid>/post/2020/12/09/jupyter-notebook/</guid>
      <description>在本地使用服务器上的jupyter-notebook
在服务器端开启 jupyter notebook --no-browser --port=9009 在本地端 ssh -N -f -L localhost:9008:localhost:9009 user@server-ip </description>
    </item>
    
  </channel>
</rss>
